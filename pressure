local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
    Name = "压力脚本",
    LoadingTitle = "压力脚本",
    LoadingSubtitle = "by sjsksjsk",
    ConfigurationSaving = {
        Enabled = false,
        FolderName = nil,
        FileName = "脚本"
    },
    Discord = {
        Enabled = false,
        Invite = "discord.gg/Mspaint",
        RememberJoins = true
    },
    KeySystem = false,
    KeySettings = {
        Title = "压力脚本卡密系统",
        Subtitle = "点击获取链接",
        Note = "无",
        FileName = "Pressure Link",
        SaveKey = false,
        GrabKeyFromSite = true,
        Key = {"https://pastebin.com/raw/kVe5WMyJ"}
    }
})

local MainTab = Window:CreateTab("主要", nil)
local MainSection = MainTab:CreateSection("无")

Rayfield:Notify({
    Title = "欢迎使用本脚本",
    Content = "开的时候演都不要演",
    Duration = 2,
    Image = nil,
    Actions = {
        Ignore = {
            Name = "好的",
            Callback = function()
                print("用户点了好的")
            end
        },
    },
})

local Input = MainTab:CreateInput({
    Name = "速度调节",
    PlaceholderText = "请输入速度",
    RemoveTextAfterFocusLost = true,
    Callback = function(Text)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = tonumber(Text) or 16
    end,
})

local Toggle = MainTab:CreateToggle({
    Name = "穿墙",
    CurrentValue = false,
    Flag = "无",
    Callback = function(Value)
        if Value then
            _G.NoclipConnection = game:GetService("RunService").Stepped:Connect(function()
                for _, part in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end)
        else
            if _G.NoclipConnection then
                _G.NoclipConnection:Disconnect()
            end
        end
    end,
})

local Toggle = MainTab:CreateToggle({
    Name = "怪来提醒",
    CurrentValue = false,
    Flag = "无",
    Callback = function(Value)
        if Value then
            if _G.MonsterAlertConnection then
                _G.MonsterAlertConnection:Disconnect()
            end

            local lastAlert = {}
            local function notifyMonster(monsterName)
                local currentTime = os.time()
                if lastAlert[monsterName] and currentTime - lastAlert[monsterName] < 5 then return end
                lastAlert[monsterName] = currentTime

                Rayfield:Notify({
                    Title = "警告!",
                    Content = monsterName .. "已生成!",
                    Duration = 5,
                })

                if _G.MonsterAlertChatEnabled then
                    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(
                        "[压力脚本] " .. monsterName .. " 已生成！", "All"
                    )
                end
            end

            _G.MonsterAlertConnection = game.Workspace.ChildAdded:Connect(function(child)
                if table.find({"Angler", "Pink", "Blitz"}, child.Name) then
                    notifyMonster(child.Name)
                end
            end)
        else
            if _G.MonsterAlertConnection then
                _G.MonsterAlertConnection:Disconnect()
                _G.MonsterAlertConnection = nil
            end
        end
    end,
})

local ESPTab = Window:CreateTab("ESP", nil)
local ESPSection = ESPTab:CreateSection("无")

local lockerESPConnection
local lockerESPEnabled = false
local lockerESPInstances = {}
local lockerUpdateDelay = 1 -- 更新间隔(秒)
local isUpdating = false

local function safeDestroy(obj)
    pcall(function()
        if obj and obj.Parent then
            obj:Destroy()
        end
    end)
end

local function clearLockerESP()
    for _, instance in pairs(lockerESPInstances) do
        safeDestroy(instance)
    end
    lockerESPInstances = {}
end

local function setupLockerESP(locker)
    if not locker or not locker.Parent then return end
    
    -- 防止重复添加
    if locker:FindFirstChild("LockerESP_Marker") then return end
    
    local marker = Instance.new("BoolValue")
    marker.Name = "LockerESP_Marker"
    marker.Parent = locker
    
    local highlight = Instance.new("Highlight")
    highlight.Name = "LockerESP_Highlight"
    highlight.Adornee = locker
    highlight.FillTransparency = 0.7
    highlight.OutlineTransparency = 0.3
    highlight.FillColor = Color3.fromRGB(0, 255, 0)
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    highlight.Parent = locker

    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Name = "LockerESP_Billboard"
    billboardGui.Adornee = locker
    billboardGui.Size = UDim2.new(0, 100, 0, 40)
    billboardGui.StudsOffset = Vector3.new(0, 3, 0)
    billboardGui.AlwaysOnTop = true
    billboardGui.Parent = locker

    local nameLabel = Instance.new("TextLabel")
    nameLabel.Text = "柜子"
    nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Size = UDim2.new(1, 0, 1, 0)
    nameLabel.Font = Enum.Font.SourceSansBold
    nameLabel.TextStrokeTransparency = 0
    nameLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    nameLabel.Parent = billboardGui

    table.insert(lockerESPInstances, highlight)
    table.insert(lockerESPInstances, billboardGui)
    table.insert(lockerESPInstances, marker)
end

local function findLockersInRoom(room)
    local lockers = {}
    local function scan(parent)
        for _, child in ipairs(parent:GetChildren()) do
            if child:IsA("Model") and (child.Name:find("Locker") or child.Name:match("柜")) then
                table.insert(lockers, child)
            end
            scan(child) -- 递归搜索子对象
        end
    end
    pcall(scan, room) -- 安全扫描
    return lockers
end

local function updateLockers()
    if isUpdating then return end
    isUpdating = true
    
    -- 分步处理避免卡顿
    local startTime = os.clock()
    local processed = 0
    
    local roomsFolder = game:GetService("Workspace"):FindFirstChild("GameplayFolder")
    if roomsFolder then
        roomsFolder = roomsFolder:FindFirstChild("Rooms")
        if roomsFolder then
            for _, room in ipairs(roomsFolder:GetChildren()) do
                local lockers = findLockersInRoom(room)
                for _, locker in ipairs(lockers) do
                    setupLockerESP(locker)
                    processed = processed + 1
                    
                    -- 每处理10个柜子检查一次时间，防止卡顿
                    if processed % 10 == 0 and (os.clock() - startTime) > 0.1 then
                        task.wait()
                        startTime = os.clock()
                    end
                end
            end
        end
    end
    
    isUpdating = false
    return processed
end

local function lockerESPLoop()
    while lockerESPEnabled do
        local processed = updateLockers()
        if processed == 0 then
            -- 如果没有找到柜子，等待更长时间再重试
            task.wait(5)
        else
            task.wait(lockerUpdateDelay)
        end
    end
end

local function startLockerESP()
    -- 初始清理
    clearLockerESP()
    
    -- 设置监听
    local roomsFolder = game:GetService("Workspace"):FindFirstChild("GameplayFolder")
    if roomsFolder then
        roomsFolder = roomsFolder:FindFirstChild("Rooms")
        if roomsFolder then
            lockerESPConnection = roomsFolder.DescendantAdded:Connect(function(descendant)
                if descendant:IsA("Model") and (descendant.Name:find("Locker") or descendant.Name:match("柜")) then
                    task.wait(0.5) -- 等待对象完全加载
                    setupLockerESP(descendant)
                end
            end)
        end
    end
    
    -- 启动更新循环
    spawn(lockerESPLoop)
end

local Toggle = ESPTab:CreateToggle({
    Name = "透视柜子",
    CurrentValue = false,
    Flag = "nil",
    Callback = function(Value)
        lockerESPEnabled = Value
        if Value then
            spawn(startLockerESP)
        else
            if lockerESPConnection then
                lockerESPConnection:Disconnect()
                lockerESPConnection = nil
            end
            clearLockerESP()
        end
    end,
})
