if Workspace:FindFirstChild("TreeCellGroup") then

local repo = 'https://raw.githubusercontent.com/mstudio45/LinoriaLib/main/'
local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()
local DeleteSnaresConnection = nil

local Window = Library:CreateWindow({
    Title = 'THE OUTDOORS',
    Center = true,
    AutoShow = true,
    TabPadding = 8,
    MenuFadeTime = 0.2
})

local Tabs = {
    Main = Window:AddTab('主要功能'),
    ESP = Window:AddTab('透视功能'),
    Other = Window:AddTab('其他工具'),
    Settings = Window:AddTab('设置')
}

local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local RunService = game:GetService("RunService")
local Camera = game:GetService("Workspace").CurrentCamera
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")

local function SafeNotify(Title, Content, Duration)
    local Notify = Library:Notify(Title, Content, Duration or 5)
    if Duration then
        task.delay(Duration, function()
            if Notify then Notify:Destroy() end
        end)
    end
    return Notify
end

local MainGroup = Tabs.Main:AddLeftGroupbox('主要功能')

local highBrightnessEnabled = false
local brightnessLevel = 1
local brightnessConnection

local function updateBrightness()
    if highBrightnessEnabled then
        Lighting.Brightness = brightnessLevel
        Lighting.Ambient = Color3.new(1, 1, 1)
        Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
    else
        Lighting.Brightness = 1
        Lighting.Ambient = Color3.new(0.5, 0.5, 0.5)
        Lighting.OutdoorAmbient = Color3.new(0.5, 0.5, 0.5)
    end
end

MainGroup:AddToggle('HighBrightness', {
    Text = '高亮',
    Default = false,
    Callback = function(Value)
        highBrightnessEnabled = Value
        if brightnessConnection then brightnessConnection:Disconnect() end
        if Value then
            brightnessConnection = RunService.RenderStepped:Connect(updateBrightness)
        end
        updateBrightness()
    end
})

MainGroup:AddSlider('BrightnessLevel', {
    Text = '亮度调整',
    Default = 1,
    Min = 1,
    Max = 10,
    Rounding = 1,
    Suffix = 'x',
    Callback = function(Value)
        brightnessLevel = Value
        if highBrightnessEnabled then updateBrightness() end
    end
})

local speedHackEnabled = false
local targetSpeed = 16
local currentMultiplier = 1
local speedConnection = RunService.Heartbeat:Connect(function()
    if speedHackEnabled and Humanoid then
        Humanoid.WalkSpeed = targetSpeed
    end
end)

MainGroup:AddToggle('SpeedHack', {
    Text = '开启速度',
    Default = false,
    Callback = function(Value)
        speedHackEnabled = Value
        if not Value and Humanoid then 
            Humanoid.WalkSpeed = 16 
            currentMultiplier = 1
            targetSpeed = 16
        end
    end
})

MainGroup:AddSlider('SpeedMultiplier', {
    Text = '速度倍数 (1~6x)',
    Default = 1,
    Min = 1,
    Max = 6,
    Rounding = 1,
    Suffix = 'x',
    Callback = function(Value)
        currentMultiplier = Value
        targetSpeed = 16 * Value
    end
})

local cameraOffset = 0
local cameraHeightOffset = 1.5
local cameraConnection

MainGroup:AddSlider('ThirdPersonDistance', {
    Text = '视角调整',
    Default = 0,
    Min = 0,
    Max = 10,
    Rounding = 1,
    Suffix = '米',
    Callback = function(Value)
        cameraOffset = Value
        if cameraConnection then cameraConnection:Disconnect() end
        if Value > 0 then
            cameraConnection = RunService.RenderStepped:Connect(function()
                local character = LocalPlayer.Character
                if character and character:FindFirstChild("HumanoidRootPart") then
                    local rootPart = character.HumanoidRootPart
                    Camera.CameraType = Enum.CameraType.Scriptable
                    Camera.CFrame = CFrame.new(
                        rootPart.Position + Vector3.new(0, cameraHeightOffset, 0) - (Camera.CFrame.LookVector * cameraOffset),
                        rootPart.Position + Vector3.new(0, cameraHeightOffset, 0)
                    )
                end
            end)
        else
            Camera.CameraType = Enum.CameraType.Custom
        end
    end
})

local deleteSurgeEnabled = false
local surgeConnection

MainGroup:AddToggle('DeleteSurge', {
    Text = '删除闪电(Beta)',
    Default = false,
    Callback = function(Value)
        deleteSurgeEnabled = Value
        if Value then
            local count = 0
            local camera = workspace:FindFirstChild("Camera")
            if camera then
                for _, child in ipairs(camera:GetChildren()) do
                    if child.Name == "SurgePart" then
                        child:Destroy()
                        count = count + 1
                    end
                end
            end
            
            surgeConnection = RunService.Heartbeat:Connect(function()
                if deleteSurgeEnabled then
                    local camera = workspace:FindFirstChild("Camera")
                    if camera then
                        for _, child in ipairs(camera:GetChildren()) do
                            if child.Name == "SurgePart" then
                                child:Destroy()
                            end
                        end
                    end
                end
            end)
            
            SafeNotify("删除闪电", string.format("已删除 %d 个闪电", count), 3)
        elseif surgeConnection then
            surgeConnection:Disconnect()
        end
    end
})

MainGroup:AddToggle('DeleteSnares', {
    Text = "禁用地刺",
    Default = false,
    Callback = function(Value)
        if Value then
            local function removeHitboxes()
                for _, room in ipairs(workspace.CurrentRooms:GetChildren()) do
                    local snares = room:FindFirstChild("Snares")
                    if snares then
                        for _, snare in ipairs(snares:GetChildren()) do
                            if snare.Name == "Snare" then
                                local hitbox = snare:FindFirstChild("Hitbox")
                                if hitbox and hitbox:IsA("BasePart") then
                                    hitbox:Destroy()
                                end
                            end
                        end
                    end
                end
            end
            
            removeHitboxes()
            
            local connection = workspace.CurrentRooms.ChildAdded:Connect(function(room)
                task.wait(1)
                removeHitboxes()
            end)
           
            DeleteSnaresConnection = connection
        else
            if DeleteSnaresConnection then
                DeleteSnaresConnection:Disconnect()
                DeleteSnaresConnection = nil
            end
        end
    end
})

local ESPGroup = Tabs.ESP:AddLeftGroupbox('透视功能')

local ESP
success, err = pcall(function()
    local ESPLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/mstudio45/MSESP/refs/heads/main/source.luau", true))()
    ESP = getgenv().mstudio45_ESP or ESPLib
end)

if not success or not ESP then
    ESP = {
        Add = function() return {} end,
        Remove = function() end,
        Initialize = function() end
    }
    SafeNotify("ESP加载失败", "功能受限: "..tostring(err))
end

pcall(function()
    ESP:Initialize({
        PrimaryColor = Color3.new(1,1,1),
        SecondaryColor = Color3.new(0,0,0),
        FontColor = Color3.new(1,1,1),
        MaxDistance = 1000,
        TracerOrigin = "Bottom",
        ShowDistance = true,
        ShowTracer = false,
        ShowName = true,
        TeamCheck = false,
        TeamColor = false,
        FillTransparency = 0.3,
        OutlineTransparency = 0.8
    })
end)

local ESPManager = {
    Objects = {},
    Connections = {}
}

local function safeAddESP(obj, config)
    if not obj or not obj.PrimaryPart or not ESP.Add then return nil end
    if ESPManager.Objects[obj] then return ESPManager.Objects[obj] end
    
    local success, espObj = pcall(function()
        return ESP:Add({
            Name = config.Name,
            Model = obj,
            Color = config.Color,
            MaxDistance = config.MaxDistance or 1000,
            TextSize = config.TextSize or 14,
            ESPType = config.ESPType or "Highlight",
            FillTransparency = config.FillTransparency or 0.3
        })
    end)
    
    if success and espObj then
        ESPManager.Objects[obj] = espObj
        return espObj
    end
    return nil
end

local function safeRemoveESP(obj)
    if ESPManager.Objects[obj] then
        pcall(function()
            if ESP.Remove then
                ESP:Remove(ESPManager.Objects[obj])
            end
            ESPManager.Objects[obj] = nil
        end)
    end
end

ESPGroup:AddToggle('SnareESP', {
    Text = '地刺透视',
    Default = false,
    Callback = function(Value)
        if Value then
            for _, room in pairs(workspace.CurrentRooms:GetChildren()) do
                local snares = room:FindFirstChild("Snares")
                if snares then
                    for _, snare in pairs(snares:GetChildren()) do
                        if snare:IsA("BasePart") and snare.Name == "Snare" then
                            safeAddESP(snare, {
                                Name = "地刺",
                                Color = Color3.fromRGB(144, 238, 144)
                            })
                        end
                    end
                end
            end
            
            local conn = workspace.DescendantAdded:Connect(function(obj)
                if obj.Name == "Snare" and obj:IsA("BasePart") then
                    local parent = obj.Parent
                    if parent and parent.Name == "Snares" then
                        safeAddESP(obj, {
                            Name = "地刺",
                            Color = Color3.fromRGB(144, 238, 144)
                        })
                    end
                end
            end)
            
            table.insert(ESPManager.Connections, conn)
        else
            for obj in pairs(ESPManager.Objects) do
                if obj.Name == "Snare" then
                    safeRemoveESP(obj)
                end
            end
            
            for i = #ESPManager.Connections, 1, -1 do
                local conn = ESPManager.Connections[i]
                if not conn.Connected then
                    table.remove(ESPManager.Connections, i)
                end
            end
        end
    end
})

ESPGroup:AddToggle('PillarESP', {
    Text = '柱子透视',
    Default = false,
    Callback = function(Value)
        if Value then
            for _, obj in pairs(workspace:GetDescendants()) do
                if (obj.Name == "MonumentEntity" or obj.Name == "柱子") and obj:IsA("Model") then
                    safeAddESP(obj, {
                        Name = "柱子",
                        Color = Color3.fromRGB(255, 182, 193)
                    })
                end
            end
            
            local conn = workspace.DescendantAdded:Connect(function(obj)
                if (obj.Name == "MonumentEntity" or obj.Name == "柱子") and obj:IsA("Model") then
                    safeAddESP(obj, {
                        Name = "柱子",
                        Color = Color3.fromRGB(255, 182, 193)
                    })
                end
            end)
            
            table.insert(ESPManager.Connections, conn)
        else
            for obj in pairs(ESPManager.Objects) do
                if (obj.Name == "MonumentEntity" or obj.Name == "柱子") then
                    safeRemoveESP(obj)
                end
            end
            
            for i = #ESPManager.Connections, 1, -1 do
                local conn = ESPManager.Connections[i]
                if not conn.Connected then
                    table.remove(ESPManager.Connections, i)
                end
            end
        end
    end
})

ESPGroup:AddToggle('KeeperESP', {
    Text = '监管透视',
    Default = false,
    Callback = function(Value)
        if Value then
            for _, obj in pairs(workspace:GetDescendants()) do
                if (obj.Name == "Groundskeeper" or obj.Name == "监管") and obj:IsA("Model") then
                    safeAddESP(obj, {
                        Name = "监管",
                        Color = Color3.fromRGB(220, 20, 60)
                    })
                end
            end
            
            local conn = workspace.DescendantAdded:Connect(function(obj)
                if (obj.Name == "Groundskeeper" or obj.Name == "监管") and obj:IsA("Model") then
                    safeAddESP(obj, {
                        Name = "监管",
                        Color = Color3.fromRGB(220, 20, 60)
                    })
                end
            end)
            
            table.insert(ESPManager.Connections, conn)
        else
            for obj in pairs(ESPManager.Objects) do
                if (obj.Name == "Groundskeeper" or obj.Name == "监管") then
                    safeRemoveESP(obj)
                end
            end
            
            for i = #ESPManager.Connections, 1, -1 do
                local conn = ESPManager.Connections[i]
                if not conn.Connected then
                    table.remove(ESPManager.Connections, i)
                end
            end
        end
    end
})

ESPGroup:AddToggle('MandrakeESP', {
    Text = '萝卜透视',
    Default = false,
    Callback = function(Value)
        if Value then
            for _, obj in pairs(workspace:GetDescendants()) do
                if (obj.Name == "Mandrake" or obj.Name == "萝卜") and obj:IsA("Model") then
                    safeAddESP(obj, {
                        Name = "萝卜",
                        Color = Color3.fromRGB(255, 215, 0)
                    })
                end
            end
            
            local conn = workspace.DescendantAdded:Connect(function(obj)
                if (obj.Name == "Mandrake" or obj.Name == "萝卜") and obj:IsA("Model") then
                    safeAddESP(obj, {
                        Name = "萝卜",
                        Color = Color3.fromRGB(255, 215, 0)
                    })
                end
            end)
            
            table.insert(ESPManager.Connections, conn)
        else
            for obj in pairs(ESPManager.Objects) do
                if (obj.Name == "Mandrake" or obj.Name == "萝卜") then
                    safeRemoveESP(obj)
                end
            end
            
            for i = #ESPManager.Connections, 1, -1 do
                local conn = ESPManager.Connections[i]
                if not conn.Connected then
                    table.remove(ESPManager.Connections, i)
                end
            end
        end
    end
})

ESPGroup:AddToggle('Gate35ESP', {
    Text = '闸机透视',
    Default = false,
    Callback = function(Value)
        if Value then
            for _, room in pairs(workspace.CurrentRooms:GetChildren()) do
                if room:FindFirstChild("MazeContents") then
                    local mazeContents = room.MazeContents
                    if mazeContents:FindFirstChild("GiantVines") then
                        local giantVines = mazeContents.GiantVines
                        for _, vine in ipairs(giantVines:GetChildren()) do
                            if vine.Name == "AlaskanVineSet" and vine:IsA("Model") then
                                safeAddESP(vine, {
                                    Name = "闸机",
                                    Color = Color3.new(0.2, 0.8, 0.2),
                                    MaxDistance = 1000,
                                    TextSize = 14,
                                    ESPType = "Highlight"
                                })
                            end
                        end
                    end
                end
            end
            
            local conn = workspace.CurrentRooms.ChildAdded:Connect(function(room)
                if room:FindFirstChild("MazeContents") then
                    task.wait(2)
                    local mazeContents = room.MazeContents
                    if mazeContents:FindFirstChild("GiantVines") then
                        local giantVines = mazeContents.GiantVines
                        for _, vine in ipairs(giantVines:GetChildren()) do
                            if vine.Name == "AlaskanVineSet" and vine:IsA("Model") then
                                safeAddESP(vine, {
                                    Name = "闸机",
                                    Color = Color3.new(0.2, 0.8, 0.2),
                                    MaxDistance = 1000,
                                    TextSize = 14,
                                    ESPType = "Highlight"
                                })
                            end
                        end
                    end
                end
            end)
            
            table.insert(ESPManager.Connections, conn)
        else
            for obj, esp in pairs(ESPManager.Objects) do
                if obj.Name == "AlaskanVineSet" then
                    safeRemoveESP(obj)
                end
            end
            
            for i = #ESPManager.Connections, 1, -1 do
                local conn = ESPManager.Connections[i]
                if not conn.Connected then
                    table.remove(ESPManager.Connections, i)
                end
            end
        end
    end
})

ESPGroup:AddToggle('BossESP', {
    Text = 'Boss透视',
    Default = false,
    Callback = function(Value)
        if Value then
            local room35 = workspace.CurrentRooms:FindFirstChild("35")
            if room35 then
                local mazeContents = room35:FindFirstChild("MazeContents")
                if mazeContents then
                    local boss = mazeContents:FindFirstChild("LiveEntityBramble")
                    if boss and boss:IsA("Model") then
                        safeAddESP(boss, {
                            Name = "最终Boss",
                            Color = Color3.fromRGB(255, 50, 50),
                            MaxDistance = 1500,
                            TextSize = 18,
                            ESPType = "Highlight",
                            FillTransparency = 0.5,
                            OutlineTransparency = 0.8
                        })
                    end
                end
            end
            
            local conn = workspace.DescendantAdded:Connect(function(obj)
                if obj.Name == "LiveEntityBramble" and obj:IsA("Model") then
                    local parent = obj.Parent
                    while parent do
                        if parent.Name == "MazeContents" then
                            local grandparent = parent.Parent
                            if grandparent and grandparent.Name == "35" then
                                safeAddESP(obj, {
                                    Name = "最终Boss",
                                    Color = Color3.fromRGB(255, 50, 50),
                                    MaxDistance = 1500,
                                    TextSize = 18,
                                    ESPType = "Highlight",
                                    FillTransparency = 0.5,
                                    OutlineTransparency = 0.8
                                })
                            end
                            break
                        end
                        parent = parent.Parent
                    end
                end
            end)
            
            table.insert(ESPManager.Connections, conn)
        else
            for obj, esp in pairs(ESPManager.Objects) do
                if obj.Name == "LiveEntityBramble" then
                    safeRemoveESP(obj)
                end
            end
            
            for i = #ESPManager.Connections, 1, -1 do
                local conn = ESPManager.Connections[i]
                if not conn.Connected then
                    table.remove(ESPManager.Connections, i)
                end
            end
        end
    end
})

local DoorESP = {
    Enabled = false,
    Doors = {},
    Connections = {}
}

local function isValidDoor(door)
    if not door:IsA("Model") then return false end
    if door.Name ~= "Door" then return false end
 
    local parent = door.Parent
    while parent do
        if parent.Name == "CurrentRooms" then
            return true
        end
        parent = parent.Parent
    end
    return false
end

local function updateDoorESP(door)
    if not door or not door.PrimaryPart then return end
    
    local room = door:FindFirstAncestorWhichIsA("Model")
    local roomNumber = room and room.Name or "未知"
    
    local isOpened = false
    if door:FindFirstChild("Open") then
        isOpened = door.Open.Value
    end
    
    if DoorESP.Doors[door] then
        pcall(function()
            if ESP.Remove then
                ESP:Remove(DoorESP.Doors[door])
            end
        end)
    end
    
    local success, espObj = pcall(function()
        return ESP:Add({
            Name = "门["..roomNumber.."] "..(isOpened and "已打开" or "关闭"),
            Model = door,
            Color = isOpened and Color3.new(0, 1, 0) or Color3.new(1, 0, 0),
            MaxDistance = 1000,
            TextSize = 14,
            ESPType = "Highlight"
        })
    end)
    
    if success then
        DoorESP.Doors[door] = espObj
    end
end

local function scanAllDoors()
    if not workspace:FindFirstChild("CurrentRooms") then return end
    
    for _, room in pairs(workspace.CurrentRooms:GetChildren()) do
        if room:FindFirstChild("Door") then
            local door = room.Door
            if isValidDoor(door) then
                updateDoorESP(door)
            end
        end
    end
end

ESPGroup:AddToggle('DoorESP', {
    Text = '门透视',
    Default = false,
    Callback = function(Value)
        DoorESP.Enabled = Value
        if Value then
            scanAllDoors()
            
            DoorESP.Connections["RoomAdded"] = workspace.CurrentRooms.ChildAdded:Connect(function(room)
                task.wait(1)
                if room:FindFirstChild("Door") then
                    scanAllDoors()
                end
            end)
         
            for door in pairs(DoorESP.Doors) do
                if door:FindFirstChild("Open") then
                    DoorESP.Connections["Door_"..door:GetDebugId()] = door.Open:GetPropertyChangedSignal("Value"):Connect(function()
                        updateDoorESP(door)
                    end)
                end
            end
        else
            for door, esp in pairs(DoorESP.Doors) do
                pcall(function()
                    if ESP.Remove then
                        ESP:Remove(esp)
                    end
                end)
            end
            DoorESP.Doors = {}
            
            for _, conn in pairs(DoorESP.Connections) do
                pcall(conn.Disconnect, conn)
            end
            DoorESP.Connections = {}
        end
    end
})

local GateESP = {
    Enabled = false,
    Gates = {},
    Buttons = {},
    Connections = {}
}

local function updateGateESP(gate)
    if not gate or not gate.PrimaryPart then return end
    
    if GateESP.Gates[gate] then
        pcall(function()
            if ESP.Remove then
                ESP:Remove(GateESP.Gates[gate])
            end
        end)
    end
    
    local success, espObj = pcall(function()
        return ESP:Add({
            Name = "铁门",
            Model = gate,
            Color = Color3.new(0, 0.5, 1),
            MaxDistance = 1000,
            TextSize = 14
        })
    end)
    
    if success then
        GateESP.Gates[gate] = espObj
    end
end

local function updateButtonESP(button)
    if not button then return end
    
    if GateESP.Buttons[button] then
        pcall(function()
            if ESP.Remove then
                ESP:Remove(GateESP.Buttons[button])
            end
        end)
    end
    
    local success, espObj = pcall(function()
        return ESP:Add({
            Name = "按钮",
            Model = button,
            Color = Color3.new(1, 1, 0),
            MaxDistance = 500,
            TextSize = 12
        })
    end)
    
    if success then
        GateESP.Buttons[button] = espObj
    end
end

local function scanAllGates()
    if not workspace:FindFirstChild("CurrentRooms") then return end
    
    for _, room in pairs(workspace.CurrentRooms:GetChildren()) do
        local assets = room:FindFirstChild("Assets")
        if assets then
            local gateSetup = assets:FindFirstChild("GateSetup")
            if gateSetup then
                local gate = gateSetup:FindFirstChild("GardenGate")
                if gate and gate:IsA("Model") then
                    updateGateESP(gate)
                end
              
                local button = gateSetup:FindFirstChild("GardenGateButton")
                if button and button:IsA("BasePart") then
                    updateButtonESP(button)
                end
            end
        end
    end
end

ESPGroup:AddToggle('GateESP', {
    Text = '铁门和按钮透视',
    Default = false,
    Callback = function(Value)
        GateESP.Enabled = Value
        if Value then
            scanAllGates()
            
            GateESP.Connections["RoomAdded"] = workspace.CurrentRooms.ChildAdded:Connect(function(room)
                task.wait(1)
                scanAllGates()
            end)
        else
            for gate, esp in pairs(GateESP.Gates) do
                pcall(function()
                    if ESP.Remove then
                        ESP:Remove(esp)
                    end
                end)
            end
            GateESP.Gates = {}
            
            for button, esp in pairs(GateESP.Buttons) do
                pcall(function()
                    if ESP.Remove then
                        ESP:Remove(esp)
                    end
                end)
            end
            GateESP.Buttons = {}
            
            for _, conn in pairs(GateESP.Connections) do
                pcall(conn.Disconnect, conn)
            end
            GateESP.Connections = {}
        end
    end
})

local OtherGroup = Tabs.Other:AddLeftGroupbox('其他工具')

local function loadTool(name, url)
    SafeNotify(name.."加载中...", "请稍候", 2)
    
    local start = os.clock()
    local success, result = pcall(function()
        return loadstring(game:HttpGet(url, true))()
    end)
    
    if success then
        SafeNotify(name.."已加载", string.format("加载耗时: %.2f秒", os.clock() - start), 3)
    else
        SafeNotify("加载失败", name.."错误: "..tostring(result), 5)
    end
end

OtherGroup:AddButton('Dex 浏览器', function()
    loadTool("Dex", 'https://raw.githubusercontent.com/infyiff/backup/main/dex.lua')
end)

OtherGroup:AddButton('Spy 调试器', function()
    loadTool("Spy", "https://raw.githubusercontent.com/renlua/Script-Tutorial/refs/heads/main/Spy.lua")
end)

OtherGroup:AddButton('无限收益 (IY)', function()
    loadTool("IY", 'https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source')
end)

game:GetService("Players").PlayerRemoving:Connect(function(player)
    if player == LocalPlayer then
        if speedConnection then speedConnection:Disconnect() end
        if cameraConnection then cameraConnection:Disconnect() end
        if brightnessConnection then brightnessConnection:Disconnect() end
        if surgeConnection then surgeConnection:Disconnect() end
        
        for obj in pairs(ESPManager.Objects) do
            safeRemoveESP(obj)
        end
        
        for door, esp in pairs(DoorESP.Doors) do
            pcall(function()
                if ESP.Remove then
                    ESP:Remove(esp)
                end
            end)
        end
        
        for gate, esp in pairs(GateESP.Gates) do
            pcall(function()
                if ESP.Remove then
                    ESP:Remove(esp)
                end
            end)
        end
        
        for button, esp in pairs(GateESP.Buttons) do
            pcall(function()
                if ESP.Remove then
                    ESP:Remove(esp)
                end
            end)
        end
        
        Lighting.Brightness = 1
        Lighting.Ambient = Color3.new(0.5, 0.5, 0.5)
        Lighting.OutdoorAmbient = Color3.new(0.5, 0.5, 0.5)
    end
end)

ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' })

ThemeManager:SetFolder('XB_Script')
SaveManager:SetFolder('XB_Script/THE_OUTDOORS')
SaveManager:BuildConfigSection(Tabs.Settings)
ThemeManager:ApplyToTab(Tabs.Settings)

local MenuGroup = Tabs.Settings:AddLeftGroupbox('菜单')
MenuGroup:AddToggle('KeybindToggle', {
    Text = '显示快捷键菜单',
    Default = true,
    Callback = function(Value)
        Library.KeybindFrame.Visible = Value
    end
})

MenuGroup:AddToggle('CustomCursor', {
    Text = '自定义光标',
    Default = true,
    Callback = function(Value)
        Library.ShowCustomCursor = Value
    end
})

MenuGroup:AddLabel('菜单快捷键'):AddKeyPicker('MenuKeybind', {
    Default = 'RightShift',
    NoUI = true,
    Text = '菜单快捷键'
})

MenuGroup:AddButton('卸载脚本', function()
    Library:Unload()
end)

Library.ToggleKeybind = Options.MenuKeybind

Library:SetWatermarkVisibility(true)
local WatermarkConnection = game:GetService('RunService').RenderStepped:Connect(function()
    Library:SetWatermark(('XB脚本 | THE OUTDOORS | %s fps | %s ms'):format(
        math.floor(1 / game:GetService('RunService').RenderStepped:Wait()),
        math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue())
    ))
end)

Library:OnUnload(function()
    WatermarkConnection:Disconnect()
end)

game.StarterGui:SetCore("SendNotification", {Title="XB脚本"; Text="检测到The Backdoors,已自动开启脚本"; Duration=3;})

setclipboard("支持一下原作者,求求了[Q] 249592274")

elseif Workspace:FindFirstChild("new tool") then
    game.StarterGui:SetCore("SendNotification", {Title="XB脚本"; Text="检测到The Backdoors,已自动开启脚本"; Duration=3;})
    loadstring(game:HttpGet("https://raw.githubusercontent.com/sjsksjsk219/aaaaaa/refs/heads/main/The_Backdoors"))()
    setclipboard("支持一下原作者,求求了[Q] 249592274")
elseif game.PlaceId == 95702387256198 then
    loadstring(game:HttpGet("https://raw.githubusercontent.com/sjsksjsk219/aaaaaa/refs/heads/main/偷一辆车"))()
    game.StarterGui:SetCore("SendNotification", {Title="XB脚本"; Text="检测到偷一辆车,已自动开启脚本"; Duration=3;})
    setclipboard("支持一下原作者,求求了[Q] 249592274")
elseif game.PlaceId == 18687417158 then
    loadstring(game:HttpGet("https://raw.githubusercontent.com/sjsksjsk219/aaaaaa/refs/heads/main/%E8%A2%AB%E9%81%97%E5%BC%83"))()
    game.StarterGui:SetCore("SendNotification", {Title="XB脚本"; Text="检测到被遗弃,已自动开启脚本"; Duration=3;})
    setclipboard("支持一下原作者,求求了[Q] 249592274")
elseif game.PlaceId == 12552538292 then
    loadstring(game:HttpGet("https://raw.githubusercontent.com/sjsksjsk219/aaaaaa/refs/heads/main/Pressure"))()
    game.StarterGui:SetCore("SendNotification", {Title="XB脚本"; Text="检测到压力,已自动开启脚本"; Duration=3;})
    setclipboard("支持一下原作者,求求了[Q] 249592274")
elseif game.PlaceId == 79546208627805 and game.GameId == 7326934954 then
    loadstring(game:HttpGet("https://raw.githubusercontent.com/sjsksjsk219/aaaaaa/refs/heads/main/91-Hall"))()
    setclipboard("支持一下原作者,求求了[Q] 249592274")
    game.StarterGui:SetCore("SendNotification", {Title="XB脚本"; Text="检测到森林中的99天,当前处于大厅,已开启大厅脚本"; Duration=3;})
elseif game.PlaceId == 126509999114328 and game.GameId == 7326934954 then
    loadstring(game:HttpGet("https://raw.githubusercontent.com/sjsksjsk219/aaaaaa/refs/heads/main/91-Main"))()
    setclipboard("支持一下原作者,求求了[Q] 249592274")
    game.StarterGui:SetCore("SendNotification", {Title="XB脚本"; Text="检测到森林中的99天,已自动开启脚本"; Duration=3;})
else
    game.StarterGui:SetCore("SendNotification", {Title="XB脚本"; Text="没有这服务器的脚本"; Duration=3;})
    task.wait(5)
    setclipboard("加Q:249592274")
    game:GetService("Players").LocalPlayer:Kick("请更换服务器或脚本")
end
