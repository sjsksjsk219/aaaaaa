local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfieldb'))()

Rayfield:Notify({
    Title = "XB脚本",
    Content = "检测中......",
    Duration = 3,
    Image = nil
})

if game.PlaceId == 6839171747 then

Rayfield:Notify({
    Title = "XB脚本",
    Content = "检测到THE_OUTDOORS,已自动开启脚本",
    Duration = 5,
    Image = nil
})

local Window = Rayfield:CreateWindow({
    Name = "THE OUTDOORS",
    LoadingTitle = "XB脚本--THE OUTDOORS",
    LoadingSubtitle = "by sjsksjsk",
    ConfigurationSaving = {
        Enabled = false,
        FolderName = nil,
        FileName = "脚本"
    },
    Discord = {
        Enabled = false,
        Invite = "discord.gg/Mspaint",
        RememberJoins = true
    },
    KeySystem = false,
    KeySettings = {
        Title ="卡密系统",
        Subtitle = "点击获取链接",
        Note = "无",
        FileName = "Link",
        SaveKey = true,
        GrabKeyFromSite = true,
        Key = {"https://pastebin.com/raw/5a5zfWn7"}
    }
})

Rayfield:Notify({
    Title = "欢迎使用本脚本",
    Content = "开的时候演都不要演",
    Duration = 2,
    Image = nil,
    Actions = {
        Ignore = {
            Name = "好的",
            Callback = function()
                print("用户点了好的")
            end,
        },
    },
})

local MainTab = Window:CreateTab("主要",nil)

local Slider = MainTab:CreateSlider({
   Name = "速度",
   Range = {0,6},
   Increment = 10,
   Suffix = "速度",
   CurrentValue = 1,
   Flag = nil, -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
       game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value * 4 
   end,
})

    local bloomEffect, colorCorrectionEffect
    local camera = workspace.CurrentCamera or game:GetService("Workspace").CurrentCamera

    local Toggle = MainTab:CreateToggle({
        Name = "高亮增强",
        Callback = function(Value)
            if Value then
                repeat task.wait() until workspace.CurrentCamera
                camera = workspace.CurrentCamera

                if bloomEffect then bloomEffect:Destroy() end
                if colorCorrectionEffect then colorCorrectionEffect:Destroy() end

                bloomEffect = Instance.new("BloomEffect")
                bloomEffect.Parent = camera
                bloomEffect.Intensity = 1.2  -- Doors 环境较暗，降低强度
                bloomEffect.Threshold = 0.2
                bloomEffect.Size = 24

                colorCorrectionEffect = Instance.new("ColorCorrectionEffect")
                colorCorrectionEffect.Parent = camera
                colorCorrectionEffect.Contrast = 0.3
                colorCorrectionEffect.Saturation = -0.1  -- 降低饱和度以适配户外场景

                workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
                    if Value then
                        task.wait(1)  -- 等待相机稳定
                        Toggle.Callback(Value)  -- 重新应用特效
                    end
                end)
            else
                if bloomEffect then bloomEffect:Destroy() end
                if colorCorrectionEffect then colorCorrectionEffect:Destroy() end
            end
        end,
    })

    local Toggle = MainTab:CreateToggle({
        Name = "低画质",
        Callback = function(Value)
            local Players = game:GetService("Players")
            local player = Players.LocalPlayer

            local function updateShadows(character)
                if not character then return end
                for _, part in ipairs(character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CastShadow = not Value
                        part.Material = Value and Enum.Material.Plastic or Enum.Material.SmoothPlastic
                    end
                end
            end

            -- 初始设置
            updateShadows(player.Character)

            -- 监听角色重生（Doors 死亡后角色会重新生成）
            if Value then
                player.CharacterAdded:Connect(updateShadows)
            else
                -- 恢复默认材质和阴影
                updateShadows(player.Character)
            end
        end,
    })

local AdvancedESP = {}
AdvancedESP.__index = AdvancedESP

local DEFAULT_CONFIG = {
    UpdateInterval = 1,
    LoadWaitTime = 0.2,
    HighlightColor = Color3.fromRGB(255, 0, 0),
    LabelColor = Color3.fromRGB(255, 255, 255),
    LabelSize = 14,
    ShowDistance = true,
    MaxDistance = 1000,
    ExactMatch = false,
    CheckMarker = false,
    MarkerName = "",
    SearchPath = "Workspace",
    ScanRecursive = true,
    DisplayNames = {},
    ObjectColors = {}
}

function AdvancedESP.new(targetNames)
    local self = setmetatable({}, AdvancedESP)
    self.Config = table.clone(DEFAULT_CONFIG)
    self.TargetNames = type(targetNames) == "table" and targetNames or {targetNames}
    self.Active = false
    self.Instances = {}
    self.Connections = {}
    return self
end

function AdvancedESP:_safeCall(func, ...)
    local success, err = pcall(func, ...)
    if not success then
        warn("[ESP 错误]", err)
        return false
    end
    return true
end

function AdvancedESP:_getFromPath(path)
    local parts = string.split(path, ".")
    local current = game
    for _, part in ipairs(parts) do
        if not current then return nil end
        current = current:FindFirstChild(part)
    end
    return current
end

function AdvancedESP:_getDistance(obj)
    local char = game.Players.LocalPlayer.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        return (char.HumanoidRootPart.Position - obj.Position).Magnitude
    end
    return math.huge
end

function AdvancedESP:_createESP(obj)
    if not obj or obj:FindFirstChild("AdvancedESP_Marker") then return false end
    
    local displayName = self.Config.DisplayNames[obj.Name] or obj.Name
    local highlightColor = self.Config.ObjectColors[obj.Name] or self.Config.HighlightColor
    
    local marker = Instance.new("BoolValue")
    marker.Name = "AdvancedESP_Marker"
    marker.Parent = obj
    
    local highlight = Instance.new("Highlight")
    highlight.Name = "AdvancedESP_Highlight"
    highlight.Adornee = obj
    highlight.FillTransparency = 0.7
    highlight.OutlineTransparency = 0.2
    highlight.FillColor = highlightColor
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    highlight.Parent = obj
    
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "AdvancedESP_Billboard"
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 2.5, 0)
    billboard.AlwaysOnTop = true
    billboard.Adornee = obj
    billboard.Parent = obj
    
    local label = Instance.new("TextLabel")
    label.Text = displayName
    label.Size = UDim2.new(1, 0, 1, 0)
    label.Font = Enum.Font.SourceSansBold
    label.TextSize = self.Config.LabelSize
    label.TextColor3 = self.Config.LabelColor
    label.BackgroundTransparency = 1
    label.TextStrokeTransparency = 0.5
    label.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    label.Parent = billboard
    
    table.insert(self.Instances, {
        Object = obj,
        Marker = marker,
        Highlight = highlight,
        Billboard = billboard,
        Label = label
    })
    
    if self.Config.ShowDistance then
        table.insert(self.Connections, game:GetService("RunService").Heartbeat:Connect(function()
            self:_safeCall(function()
                if not obj or not obj.Parent then return end
                
                local dist = self:_getDistance(obj)
                if dist <= self.Config.MaxDistance then
                    label.Text = string.format("%s\n[%dm]", displayName, math.floor(dist))
                    highlight.Enabled = true
                    billboard.Enabled = true
                else
                    highlight.Enabled = false
                    billboard.Enabled = false
                end
            end)
        end))
    end
    
    return true
end

function AdvancedESP:_isTarget(obj)
    if not obj:IsA("BasePart") and not obj:IsA("Model") then return false end
    
    if self.Config.SearchPath ~= "Workspace" then
        local targetPath = self:_getFromPath(self.Config.SearchPath)
        if not targetPath or not obj:IsDescendantOf(targetPath) then
            return false
        end
    end
    
    if #self.TargetNames == 0 then return true end
    
    local nameMatch = false
    for _, name in ipairs(self.TargetNames) do
        if self.Config.ExactMatch then
            if obj.Name == name then nameMatch = true break end
        else
            if string.find(obj.Name:lower(), name:lower()) then nameMatch = true break end
        end
    end
    
    if nameMatch and self.Config.CheckMarker then
        return obj:FindFirstChild(self.Config.MarkerName) ~= nil
    end
    
    return nameMatch
end

function AdvancedESP:_scanAndAdd()
    local targetPath = self:_getFromPath(self.Config.SearchPath) or workspace
    
    local function scan(parent)
        for _, obj in ipairs(parent:GetChildren()) do
            if self:_isTarget(obj) then
                self:_createESP(obj)
            end
            if self.Config.ScanRecursive then
                scan(obj)
            end
        end
    end
    
    self:_safeCall(scan, targetPath)
end

function AdvancedESP:Start()
    if self.Active then return end
    self.Active = true
    
    self:_scanAndAdd()
    
    local targetPath = self:_getFromPath(self.Config.SearchPath) or workspace
    table.insert(self.Connections, targetPath.DescendantAdded:Connect(function(obj)
        if self:_isTarget(obj) then
            task.wait(self.Config.LoadWaitTime)
            self:_createESP(obj)
        end
    end))
    
    table.insert(self.Connections, game:GetService("RunService").Heartbeat:Connect(function()
        if os.clock() - (self._lastUpdate or 0) >= self.Config.UpdateInterval then
            self:_scanAndAdd()
            self._lastUpdate = os.clock()
        end
    end))
end

function AdvancedESP:Stop()
    if not self.Active then return end
    self.Active = false
    
    for _, conn in ipairs(self.Connections) do
        conn:Disconnect()
    end
    self.Connections = {}
    
    for _, data in ipairs(self.Instances) do
        self:_safeCall(function()
            data.Highlight:Destroy()
            data.Billboard:Destroy()
            data.Marker:Destroy()
        end)
    end
    self.Instances = {}
end

function AdvancedESP:SetConfig(config)
    for k, v in pairs(config) do
        if self.Config[k] ~= nil then
            self.Config[k] = v
        end
    end
    return self
end

local MonumentESP = AdvancedESP.new({"MonumentEntity","柱子"})
MonumentESP:SetConfig({
    ScanRecursive = true,
    MaxDistance = 100000,
    HighlightColor = Color3.fromRGB(255,182,193),
    CheckMarker = false,
    LabelSize = 8,
    ShowDistance = true,
    DisplayNames = {
        MonumentEntity = "柱子怪"
    }
})

--[[
workspace.CurrentRooms["3"].Door.Door
workspace.CurrentRooms["3"].Groundskeeper
workspace.CurrentRooms["3"].Mandrakes:GetChildren()[7].Mandrake
workspace.CurrentRooms["3"].Snares:GetChildren()[6].Snare
workspace.CurrentRooms["1"].Assets:GetChildren()[34].LotusPetalPickup.Handle
workspace.CurrentRooms["8"].Snares:GetChildren()[3].Snare.Holes
workspace.CurrentRooms["9"].Mandrakes:GetChildren()[5].Mandrake.Body
workspace.CurrentRooms["7"].Assets:GetChildren()[15]
workspace.CurrentRooms["0"].Door.Door.Attachment
--]]

local SnareESP = AdvancedESP.new({"Snare","地刺"})
SnareESP:SetConfig({
    ScanRecursive = true,
    MaxDistance = 10000000,
    HighlightColor = Color3.fromRGB(144,238,144),
    LabelSize = 8,
    CheckMarker = false,
    ExactMatch = true,
    ShowDistance = true,
    DisplayName = {
        Snare = "地刺"
    }
})

local MandrakeESP = AdvancedESP.new({"Mandrake","萝卜"})
MandrakeESP:SetConfig({
    ScanRecursive = true,
    MaxDistance = 10000000,
    HighlightColor = Color3.fromRGB(144,238,144),
    LabelSize = 8,
    CheckMarker = true,
    ExactMatch = true,
    MarkerName = "Body",
    ShowDistance = true,
    DisplayName = {
        Mandrake = "萝卜"
    }
})


local DoorESP = AdvancedESP.new({"Door","门"})
DoorESP:SetConfig({
    ScanRecursive = true,
    MaxDistance = 10000000,
    HighlightColor = Color3.fromRGB(144,238,144),
    LabelSize = 8,
    CheckMarker = true,
    MarkerName = "Attachment",
    ShowDistance = true,
    DisplayName = {
        Door = "门"
    }
})

local GroundskeeperESP = AdvancedESP.new({"Groundskeeper","监管"})
GroundskeeperESP:SetConfig({
    ScanRecursive = true,
    MaxDistance = 1000000,
    HighlightColor = Color3.fromRGB(255,182,193),
    LabelSize = 8,
    DisplayName = {
        Groundskeeper = "监管"
    }
})

local ESPTab = Window:CreateTab("ESP",nil)
local Toggle = ESPTab:CreateToggle({
    Name = "柱子透视",
    Callback = function(Value)
        if Value then MonumentESP:Start() else MonumentESP:Stop() end
    end,
})

local Toggle = ESPTab:CreateToggle({
    Name = "监管透视",
    Callback = function(Value)
        if Value then GroundskeeperESP:Start() else GroundskeeperESP:Stop() end
    end,
})

local Toggle = ESPTab:CreateToggle({
    Name = "门透视",
    Callback = function(Value)
        if Value then DoorESP:Start() else DoorESP:Stop() end
    end,
})

local Toggle = ESPTab:CreateToggle({
    Name = "地刺透视",
    Callback = function(Value)
        if Value then SnareESP:Start() else SnareESP:Stop() end
    end,
})

local Toggle = ESPTab:CreateToggle({
    Name = "萝卜透视",
    Callback = function(Value)
        if Value then MandrakeESP:Start() else MandrakeESP:Stop() end
    end,
})

local OtherTab = Window:CreateTab("其它",nil)

local Button = OtherTab:CreateButton({
    Name = "Dex",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/infyiff/backup/main/dex.lua'))()
    end,
})

local Button = OtherTab:CreateButton({
    Name = "Spy",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/renlua/Script-Tutorial/refs/heads/main/Spy.lua"))()
    end,
})

local Button = OtherTab:CreateButton({
    Name = "IY",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
    end,
})

elseif game.PlaceId == 95702387256198 then

    loadstring(game:HttpGet("https://raw.githubusercontent.com/sjsksjsk219/aaaaaa/refs/heads/main/偷一辆车"))()

    Rayfield:Notify({
        Title = "XB脚本",
       Content = "检测到偷一辆车,已自动开启脚本",
        Duration = 5
    })

elseif game.PlaceId == 18687417158 then

    loadstring(game:HttpGet("https://raw.githubusercontent.com/sjsksjsk219/aaaaaa/refs/heads/main/%E8%A2%AB%E9%81%97%E5%BC%83"))()

    Rayfield:Notify({
       Title = "XB脚本",
        Content = "检测到被遗弃,已自动开启脚本",
        Duration = 5
    })

elseif game.PlaceId == 12552538292 then

    loadstring(game:HttpGet("https://raw.githubusercontent.com/sjsksjsk219/aaaaaa/refs/heads/main/Pressure"))()

    Rayfield:Notify({
       Title = "XB脚本",
       Content = "检测到压力,已自动打开脚本",
        Duration = 5
    })
else
    Rayfield:Notify({
        Title = "XB脚本",
        Content = "没有这服务器的脚本,需要请加群249592274",
        Duration = 5
    })
end
